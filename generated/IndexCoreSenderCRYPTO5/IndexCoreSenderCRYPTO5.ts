// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Issuanced extends ethereum.Event {
  get params(): Issuanced__Params {
    return new Issuanced__Params(this);
  }
}

export class Issuanced__Params {
  _event: Issuanced;

  constructor(event: Issuanced) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get inputToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class MessageSent extends ethereum.Event {
  get params(): MessageSent__Params {
    return new MessageSent__Params(this);
  }
}

export class MessageSent__Params {
  _event: MessageSent;

  constructor(event: MessageSent) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Redemption extends ethereum.Event {
  get params(): Redemption__Params {
    return new Redemption__Params(this);
  }
}

export class Redemption__Params {
  _event: Redemption;

  constructor(event: Redemption) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get outputToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class IndexCoreSenderCRYPTO5 extends ethereum.SmartContract {
  static bind(address: Address): IndexCoreSenderCRYPTO5 {
    return new IndexCoreSenderCRYPTO5("IndexCoreSenderCRYPTO5", address);
  }

  factoryStorage(): Address {
    let result = super.call("factoryStorage", "factoryStorage():(address)", []);

    return result[0].toAddress();
  }

  try_factoryStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "factoryStorage",
      "factoryStorage():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  functionsOracle(): Address {
    let result = super.call(
      "functionsOracle",
      "functionsOracle():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_functionsOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "functionsOracle",
      "functionsOracle():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRouter(): Address {
    let result = super.call("getRouter", "getRouter():(address)", []);

    return result[0].toAddress();
  }

  try_getRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall("getRouter", "getRouter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  indexToken(): Address {
    let result = super.call("indexToken", "indexToken():(address)", []);

    return result[0].toAddress();
  }

  try_indexToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("indexToken", "indexToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposedOwner(): Address {
    let result = super.call("proposedOwner", "proposedOwner():(address)", []);

    return result[0].toAddress();
  }

  try_proposedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "proposedOwner",
      "proposedOwner():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  testData(): BigInt {
    let result = super.call("testData", "testData():(uint256)", []);

    return result[0].toBigInt();
  }

  try_testData(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("testData", "testData():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  testData2(): BigInt {
    let result = super.call("testData2", "testData2():(uint256)", []);

    return result[0].toBigInt();
  }

  try_testData2(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("testData2", "testData2():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CcipReceiveCall extends ethereum.Call {
  get inputs(): CcipReceiveCall__Inputs {
    return new CcipReceiveCall__Inputs(this);
  }

  get outputs(): CcipReceiveCall__Outputs {
    return new CcipReceiveCall__Outputs(this);
  }
}

export class CcipReceiveCall__Inputs {
  _call: CcipReceiveCall;

  constructor(call: CcipReceiveCall) {
    this._call = call;
  }

  get message(): CcipReceiveCallMessageStruct {
    return changetype<CcipReceiveCallMessageStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class CcipReceiveCall__Outputs {
  _call: CcipReceiveCall;

  constructor(call: CcipReceiveCall) {
    this._call = call;
  }
}

export class CcipReceiveCallMessageStruct extends ethereum.Tuple {
  get messageId(): Bytes {
    return this[0].toBytes();
  }

  get sourceChainSelector(): BigInt {
    return this[1].toBigInt();
  }

  get sender(): Bytes {
    return this[2].toBytes();
  }

  get data(): Bytes {
    return this[3].toBytes();
  }

  get destTokenAmounts(): Array<CcipReceiveCallMessageDestTokenAmountsStruct> {
    return this[4].toTupleArray<CcipReceiveCallMessageDestTokenAmountsStruct>();
  }
}

export class CcipReceiveCallMessageDestTokenAmountsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _indexFactoryStorage(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _functionsOracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _chainlinkToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _router(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProposeOwnerCall extends ethereum.Call {
  get inputs(): ProposeOwnerCall__Inputs {
    return new ProposeOwnerCall__Inputs(this);
  }

  get outputs(): ProposeOwnerCall__Outputs {
    return new ProposeOwnerCall__Outputs(this);
  }
}

export class ProposeOwnerCall__Inputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }

  get _proposedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeOwnerCall__Outputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendIssuanceRequestCall extends ethereum.Call {
  get inputs(): SendIssuanceRequestCall__Inputs {
    return new SendIssuanceRequestCall__Inputs(this);
  }

  get outputs(): SendIssuanceRequestCall__Outputs {
    return new SendIssuanceRequestCall__Outputs(this);
  }
}

export class SendIssuanceRequestCall__Inputs {
  _call: SendIssuanceRequestCall;

  constructor(call: SendIssuanceRequestCall) {
    this._call = call;
  }

  get _wethAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _issuanceNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _chainSelector(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _latestCount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SendIssuanceRequestCall__Outputs {
  _call: SendIssuanceRequestCall;

  constructor(call: SendIssuanceRequestCall) {
    this._call = call;
  }
}

export class SendRedemptionRequestCall extends ethereum.Call {
  get inputs(): SendRedemptionRequestCall__Inputs {
    return new SendRedemptionRequestCall__Inputs(this);
  }

  get outputs(): SendRedemptionRequestCall__Outputs {
    return new SendRedemptionRequestCall__Outputs(this);
  }
}

export class SendRedemptionRequestCall__Inputs {
  _call: SendRedemptionRequestCall;

  constructor(call: SendRedemptionRequestCall) {
    this._call = call;
  }

  get _burnPercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _redemptionNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _chainSelector(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SendRedemptionRequestCall__Outputs {
  _call: SendRedemptionRequestCall;

  constructor(call: SendRedemptionRequestCall) {
    this._call = call;
  }
}

export class SetFunctionsOracleCall extends ethereum.Call {
  get inputs(): SetFunctionsOracleCall__Inputs {
    return new SetFunctionsOracleCall__Inputs(this);
  }

  get outputs(): SetFunctionsOracleCall__Outputs {
    return new SetFunctionsOracleCall__Outputs(this);
  }
}

export class SetFunctionsOracleCall__Inputs {
  _call: SetFunctionsOracleCall;

  constructor(call: SetFunctionsOracleCall) {
    this._call = call;
  }

  get _functionsOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFunctionsOracleCall__Outputs {
  _call: SetFunctionsOracleCall;

  constructor(call: SetFunctionsOracleCall) {
    this._call = call;
  }
}

export class SetIndexFactoryStorageCall extends ethereum.Call {
  get inputs(): SetIndexFactoryStorageCall__Inputs {
    return new SetIndexFactoryStorageCall__Inputs(this);
  }

  get outputs(): SetIndexFactoryStorageCall__Outputs {
    return new SetIndexFactoryStorageCall__Outputs(this);
  }
}

export class SetIndexFactoryStorageCall__Inputs {
  _call: SetIndexFactoryStorageCall;

  constructor(call: SetIndexFactoryStorageCall) {
    this._call = call;
  }

  get _factoryStorage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetIndexFactoryStorageCall__Outputs {
  _call: SetIndexFactoryStorageCall;

  constructor(call: SetIndexFactoryStorageCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall extends ethereum.Call {
  get inputs(): WithdrawEtherCall__Inputs {
    return new WithdrawEtherCall__Inputs(this);
  }

  get outputs(): WithdrawEtherCall__Outputs {
    return new WithdrawEtherCall__Outputs(this);
  }
}

export class WithdrawEtherCall__Inputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall__Outputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall extends ethereum.Call {
  get inputs(): WithdrawLinkCall__Inputs {
    return new WithdrawLinkCall__Inputs(this);
  }

  get outputs(): WithdrawLinkCall__Outputs {
    return new WithdrawLinkCall__Outputs(this);
  }
}

export class WithdrawLinkCall__Inputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall__Outputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}
