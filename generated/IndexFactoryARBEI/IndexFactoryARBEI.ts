// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Issuanced extends ethereum.Event {
  get params(): Issuanced__Params {
    return new Issuanced__Params(this);
  }
}

export class Issuanced__Params {
  _event: Issuanced;

  constructor(event: Issuanced) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get inputToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Redemption extends ethereum.Event {
  get params(): Redemption__Params {
    return new Redemption__Params(this);
  }
}

export class Redemption__Params {
  _event: Redemption;

  constructor(event: Redemption) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get outputToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IndexFactoryARBEI extends ethereum.SmartContract {
  static bind(address: Address): IndexFactoryARBEI {
    return new IndexFactoryARBEI("IndexFactoryARBEI", address);
  }

  factoryStorage(): Address {
    let result = super.call("factoryStorage", "factoryStorage():(address)", []);

    return result[0].toAddress();
  }

  try_factoryStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "factoryStorage",
      "factoryStorage():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proposedOwner(): Address {
    let result = super.call("proposedOwner", "proposedOwner():(address)", []);

    return result[0].toAddress();
  }

  try_proposedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "proposedOwner",
      "proposedOwner():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redemption(
    amountIn: BigInt,
    _tokenOut: Address,
    _tokenOutPath: Array<Address>,
    _tokenOutFees: Array<i32>,
  ): BigInt {
    let result = super.call(
      "redemption",
      "redemption(uint256,address,address[],uint24[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amountIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromAddressArray(_tokenOutPath),
        ethereum.Value.fromI32Array(_tokenOutFees),
      ],
    );

    return result[0].toBigInt();
  }

  try_redemption(
    amountIn: BigInt,
    _tokenOut: Address,
    _tokenOutPath: Array<Address>,
    _tokenOutFees: Array<i32>,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redemption",
      "redemption(uint256,address,address[],uint24[]):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amountIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromAddressArray(_tokenOutPath),
        ethereum.Value.fromI32Array(_tokenOutFees),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _factoryStorage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class IssuanceIndexTokensCall extends ethereum.Call {
  get inputs(): IssuanceIndexTokensCall__Inputs {
    return new IssuanceIndexTokensCall__Inputs(this);
  }

  get outputs(): IssuanceIndexTokensCall__Outputs {
    return new IssuanceIndexTokensCall__Outputs(this);
  }
}

export class IssuanceIndexTokensCall__Inputs {
  _call: IssuanceIndexTokensCall;

  constructor(call: IssuanceIndexTokensCall) {
    this._call = call;
  }

  get _tokenIn(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenInPath(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _tokenInFees(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class IssuanceIndexTokensCall__Outputs {
  _call: IssuanceIndexTokensCall;

  constructor(call: IssuanceIndexTokensCall) {
    this._call = call;
  }
}

export class IssuanceIndexTokensWithEthCall extends ethereum.Call {
  get inputs(): IssuanceIndexTokensWithEthCall__Inputs {
    return new IssuanceIndexTokensWithEthCall__Inputs(this);
  }

  get outputs(): IssuanceIndexTokensWithEthCall__Outputs {
    return new IssuanceIndexTokensWithEthCall__Outputs(this);
  }
}

export class IssuanceIndexTokensWithEthCall__Inputs {
  _call: IssuanceIndexTokensWithEthCall;

  constructor(call: IssuanceIndexTokensWithEthCall) {
    this._call = call;
  }

  get _inputAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IssuanceIndexTokensWithEthCall__Outputs {
  _call: IssuanceIndexTokensWithEthCall;

  constructor(call: IssuanceIndexTokensWithEthCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ProposeOwnerCall extends ethereum.Call {
  get inputs(): ProposeOwnerCall__Inputs {
    return new ProposeOwnerCall__Inputs(this);
  }

  get outputs(): ProposeOwnerCall__Outputs {
    return new ProposeOwnerCall__Outputs(this);
  }
}

export class ProposeOwnerCall__Inputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }

  get _proposedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeOwnerCall__Outputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }
}

export class RedemptionCall extends ethereum.Call {
  get inputs(): RedemptionCall__Inputs {
    return new RedemptionCall__Inputs(this);
  }

  get outputs(): RedemptionCall__Outputs {
    return new RedemptionCall__Outputs(this);
  }
}

export class RedemptionCall__Inputs {
  _call: RedemptionCall;

  constructor(call: RedemptionCall) {
    this._call = call;
  }

  get amountIn(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenOut(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenOutPath(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _tokenOutFees(): Array<i32> {
    return this._call.inputValues[3].value.toI32Array();
  }
}

export class RedemptionCall__Outputs {
  _call: RedemptionCall;

  constructor(call: RedemptionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFactoryStorageCall extends ethereum.Call {
  get inputs(): SetFactoryStorageCall__Inputs {
    return new SetFactoryStorageCall__Inputs(this);
  }

  get outputs(): SetFactoryStorageCall__Outputs {
    return new SetFactoryStorageCall__Outputs(this);
  }
}

export class SetFactoryStorageCall__Inputs {
  _call: SetFactoryStorageCall;

  constructor(call: SetFactoryStorageCall) {
    this._call = call;
  }

  get _factoryStorage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFactoryStorageCall__Outputs {
  _call: SetFactoryStorageCall;

  constructor(call: SetFactoryStorageCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
