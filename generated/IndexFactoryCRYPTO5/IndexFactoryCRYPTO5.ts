// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestIssuance extends ethereum.Event {
  get params(): RequestIssuance__Params {
    return new RequestIssuance__Params(this);
  }
}

export class RequestIssuance__Params {
  _event: RequestIssuance;

  constructor(event: RequestIssuance) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get inputToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RequestRedemption extends ethereum.Event {
  get params(): RequestRedemption__Params {
    return new RequestRedemption__Params(this);
  }
}

export class RequestRedemption__Params {
  _event: RequestRedemption;

  constructor(event: RequestRedemption) {
    this._event = event;
  }

  get messageId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get outputToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class IndexFactoryCRYPTO5 extends ethereum.SmartContract {
  static bind(address: Address): IndexFactoryCRYPTO5 {
    return new IndexFactoryCRYPTO5("IndexFactoryCRYPTO5", address);
  }

  coreSender(): Address {
    let result = super.call("coreSender", "coreSender():(address)", []);

    return result[0].toAddress();
  }

  try_coreSender(): ethereum.CallResult<Address> {
    let result = super.tryCall("coreSender", "coreSender():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentChainSelector(): BigInt {
    let result = super.call(
      "currentChainSelector",
      "currentChainSelector():(uint64)",
      [],
    );

    return result[0].toBigInt();
  }

  try_currentChainSelector(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentChainSelector",
      "currentChainSelector():(uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factoryStorage(): Address {
    let result = super.call("factoryStorage", "factoryStorage():(address)", []);

    return result[0].toAddress();
  }

  try_factoryStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "factoryStorage",
      "factoryStorage():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  functionsOracle(): Address {
    let result = super.call(
      "functionsOracle",
      "functionsOracle():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_functionsOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "functionsOracle",
      "functionsOracle():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  indexToken(): Address {
    let result = super.call("indexToken", "indexToken():(address)", []);

    return result[0].toAddress();
  }

  try_indexToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("indexToken", "indexToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposedOwner(): Address {
    let result = super.call("proposedOwner", "proposedOwner():(address)", []);

    return result[0].toAddress();
  }

  try_proposedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "proposedOwner",
      "proposedOwner():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _currentChainSelector(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _indexFactoryStorage(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _functionsOracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _coreSender(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class IssuanceIndexTokensCall extends ethereum.Call {
  get inputs(): IssuanceIndexTokensCall__Inputs {
    return new IssuanceIndexTokensCall__Inputs(this);
  }

  get outputs(): IssuanceIndexTokensCall__Outputs {
    return new IssuanceIndexTokensCall__Outputs(this);
  }
}

export class IssuanceIndexTokensCall__Inputs {
  _call: IssuanceIndexTokensCall;

  constructor(call: IssuanceIndexTokensCall) {
    this._call = call;
  }

  get _tokenIn(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenInPath(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _tokenInFees(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get _inputAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _crossChainFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class IssuanceIndexTokensCall__Outputs {
  _call: IssuanceIndexTokensCall;

  constructor(call: IssuanceIndexTokensCall) {
    this._call = call;
  }
}

export class IssuanceIndexTokensWithEthCall extends ethereum.Call {
  get inputs(): IssuanceIndexTokensWithEthCall__Inputs {
    return new IssuanceIndexTokensWithEthCall__Inputs(this);
  }

  get outputs(): IssuanceIndexTokensWithEthCall__Outputs {
    return new IssuanceIndexTokensWithEthCall__Outputs(this);
  }
}

export class IssuanceIndexTokensWithEthCall__Inputs {
  _call: IssuanceIndexTokensWithEthCall;

  constructor(call: IssuanceIndexTokensWithEthCall) {
    this._call = call;
  }

  get _inputAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _crossChainFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IssuanceIndexTokensWithEthCall__Outputs {
  _call: IssuanceIndexTokensWithEthCall;

  constructor(call: IssuanceIndexTokensWithEthCall) {
    this._call = call;
  }
}

export class ProposeOwnerCall extends ethereum.Call {
  get inputs(): ProposeOwnerCall__Inputs {
    return new ProposeOwnerCall__Inputs(this);
  }

  get outputs(): ProposeOwnerCall__Outputs {
    return new ProposeOwnerCall__Outputs(this);
  }
}

export class ProposeOwnerCall__Inputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }

  get _proposedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeOwnerCall__Outputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }
}

export class RedemptionCall extends ethereum.Call {
  get inputs(): RedemptionCall__Inputs {
    return new RedemptionCall__Inputs(this);
  }

  get outputs(): RedemptionCall__Outputs {
    return new RedemptionCall__Outputs(this);
  }
}

export class RedemptionCall__Inputs {
  _call: RedemptionCall;

  constructor(call: RedemptionCall) {
    this._call = call;
  }

  get amountIn(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _crossChainFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenOut(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _tokenOutPath(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get _tokenOutFees(): Array<i32> {
    return this._call.inputValues[4].value.toI32Array();
  }
}

export class RedemptionCall__Outputs {
  _call: RedemptionCall;

  constructor(call: RedemptionCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCoreSenderCall extends ethereum.Call {
  get inputs(): SetCoreSenderCall__Inputs {
    return new SetCoreSenderCall__Inputs(this);
  }

  get outputs(): SetCoreSenderCall__Outputs {
    return new SetCoreSenderCall__Outputs(this);
  }
}

export class SetCoreSenderCall__Inputs {
  _call: SetCoreSenderCall;

  constructor(call: SetCoreSenderCall) {
    this._call = call;
  }

  get _coreSender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCoreSenderCall__Outputs {
  _call: SetCoreSenderCall;

  constructor(call: SetCoreSenderCall) {
    this._call = call;
  }
}

export class SetFunctionsOracleCall extends ethereum.Call {
  get inputs(): SetFunctionsOracleCall__Inputs {
    return new SetFunctionsOracleCall__Inputs(this);
  }

  get outputs(): SetFunctionsOracleCall__Outputs {
    return new SetFunctionsOracleCall__Outputs(this);
  }
}

export class SetFunctionsOracleCall__Inputs {
  _call: SetFunctionsOracleCall;

  constructor(call: SetFunctionsOracleCall) {
    this._call = call;
  }

  get _functionsOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFunctionsOracleCall__Outputs {
  _call: SetFunctionsOracleCall;

  constructor(call: SetFunctionsOracleCall) {
    this._call = call;
  }
}

export class SetIndexFactoryStorageCall extends ethereum.Call {
  get inputs(): SetIndexFactoryStorageCall__Inputs {
    return new SetIndexFactoryStorageCall__Inputs(this);
  }

  get outputs(): SetIndexFactoryStorageCall__Outputs {
    return new SetIndexFactoryStorageCall__Outputs(this);
  }
}

export class SetIndexFactoryStorageCall__Inputs {
  _call: SetIndexFactoryStorageCall;

  constructor(call: SetIndexFactoryStorageCall) {
    this._call = call;
  }

  get _factoryStorage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetIndexFactoryStorageCall__Outputs {
  _call: SetIndexFactoryStorageCall;

  constructor(call: SetIndexFactoryStorageCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
